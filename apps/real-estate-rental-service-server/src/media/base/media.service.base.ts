/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Media as PrismaMedia } from "@prisma/client";

export class MediaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MediaCountArgs, "select">): Promise<number> {
    return this.prisma.media.count(args);
  }

  async mediaItems(args: Prisma.MediaFindManyArgs): Promise<PrismaMedia[]> {
    return this.prisma.media.findMany(args);
  }
  async media(args: Prisma.MediaFindUniqueArgs): Promise<PrismaMedia | null> {
    return this.prisma.media.findUnique(args);
  }
  async createMedia(args: Prisma.MediaCreateArgs): Promise<PrismaMedia> {
    return this.prisma.media.create(args);
  }
  async updateMedia(args: Prisma.MediaUpdateArgs): Promise<PrismaMedia> {
    return this.prisma.media.update(args);
  }
  async deleteMedia(args: Prisma.MediaDeleteArgs): Promise<PrismaMedia> {
    return this.prisma.media.delete(args);
  }
}
